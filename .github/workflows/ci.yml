name: CI/CD Pipeline

on:
  release:
    types: [published]
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  dockerize:
    name: "Dockerize Application, Sign and Push to Registry"
    runs-on: self-hosted

    permissions:
      contents: 'write'
      id-token: 'write'
      pull-requests: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: reg.wehmoen.dev
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Build and tag Docker image
        run: |
          IMAGE_NAME=reg.wehmoen.dev/github/ronin-ecosystem-validation

          case "${{ github.event_name }}" in
            push)
              docker build \
                --tag $IMAGE_NAME:${{ github.sha }} \
                --tag $IMAGE_NAME:latest \
                .
          
              docker push $IMAGE_NAME:${{ github.sha }}
              docker push $IMAGE_NAME:latest
              ;;
            release)
              docker build \
                --tag $IMAGE_NAME:latest \
                --tag $IMAGE_NAME:${{ github.sha }} \
                --tag $IMAGE_NAME:${{ github.event.release.tag_name }} \
                .
          
              docker push $IMAGE_NAME:${{ github.event.release.tag_name }}
              docker push $IMAGE_NAME:${{ github.sha }}
              ;;
            pull_request)
              PR_ID=${{ github.event.pull_request.number }}
              docker build \
                --tag $IMAGE_NAME:${{ github.sha }} \
                --tag $IMAGE_NAME:pr-$PR_ID \
                .     
              docker push $IMAGE_NAME:pr-$PR_ID
              docker push $IMAGE_NAME:${{ github.sha }}
              ;;
          esac


      - name: Sign Docker Image
        run: |
          IMAGE_NAME=reg.wehmoen.dev/github/ronin-ecosystem-validation

          case "${{ github.event_name }}" in
            push)
              DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_NAME:latest | cut -d'@' -f2)
              ;;
            release)
              DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_NAME:${{ github.event.release.tag_name }} | cut -d'@' -f2)
              ;;
            pull_request)
              PR_ID=${{ github.event.pull_request.number }}
              DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_NAME:pr-$PR_ID | cut -d'@' -f2)
              ;;
          esac    

          cosign sign --yes --key env://COSIGN_PRIVATE_KEY $IMAGE_NAME@$DIGEST

        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Install GitHub CLI
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'release' }}
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/cli/cli/releases/latest | jq -r .tag_name)
          curl -sSL https://github.com/cli/cli/releases/download/${LATEST_VERSION}/gh_${LATEST_VERSION#v}_linux_amd64.tar.gz | tar -xz
          cp gh_${LATEST_VERSION#v}_linux_amd64/bin/gh /usr/local/bin/

      - name: Install Go
        if: ${{ github.event_name == 'release' }}
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Add Comment to PR with Docker Image
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          PR_ID=${{ github.event.pull_request.number }}
          IMAGE_NAME=reg.wehmoen.dev/github/ronin-ecosystem-validation
          WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          COMMENT_FILE=$(mktemp)
          echo "**New Docker image pushed**" >> $COMMENT_FILE
          echo "" >> $COMMENT_FILE
          echo "Pull: \`docker pull $IMAGE_NAME:${{ github.sha }}\`" >> $COMMENT_FILE
          echo "" >> $COMMENT_FILE
          echo "[View workflow run]($WORKFLOW_URL)" >> $COMMENT_FILE
          
          gh pr comment $PR_ID --body-file $COMMENT_FILE
          
          rm $COMMENT_FILE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Release Assets
        if : ${{ github.event_name == 'release' }}
        run: make -j 10 all

      - name: Update Release Description
        if: ${{ github.event_name == 'release' }}
        run: |
          RELEASE_TAG=${{ github.ref_name }}
          RELEASE_BODY=$(gh release view "$RELEASE_TAG" --json body -q .body)
          UPDATED_BODY=$(cat <<EOF
          $RELEASE_BODY

          ---

          Pull this version: \`docker pull reg.wehmoen.dev/github/ronin-ecosystem-validation:${RELEASE_TAG}\`
          EOF
          )

          echo "$UPDATED_BODY" > ./release.md

          gh release edit "$RELEASE_TAG" --notes-file ./release.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Artifacts
        if : ${{ github.event_name == 'release' }}
        run: gh release upload "${{ github.ref_name }}" ./dist/*
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}